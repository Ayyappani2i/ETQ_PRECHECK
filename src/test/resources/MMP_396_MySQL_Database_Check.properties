

TC_05
utilized_DB_size =  select Size_in_GB from (SELECT table_schema 'Database_name', ROUND(SUM(data_length + index_length) / 1024 / 1024 /1024, 2) 'Size_in_GB' FROM information_schema.tables where table_schema not in ('INFORMATION_SCHEMA','MYSQL','PERFORMANCE_SCHEMA','SYS')  GROUP BY table_schema WITH ROLLUP) t WHERE Database_name IS NULL; 
user_privilage = SELECT   mu.host `Host`,   mu.user `User`,   REPLACE(RTRIM(CONCAT(   IF(mu.Select_priv = 'Y', 'Select ', ''),   IF(mu.Index_priv = 'Y', 'Index ', ''),   IF(mu.Show_db_priv = 'Y', 'Show_db ', ''),   IF(mu.Execute_priv = 'Y', 'Execute ', ''),   IF(mu.Show_view_priv = 'Y', 'Show_view ', ''),   IF(mu.Event_priv = 'Y', 'Event ', ''),   IF(mu.Trigger_priv = 'Y', 'Trigger ', ''),   IF(mu.Repl_client_priv = 'Y', 'Repl_client ', '')   )), ' ', ', ') AS `Privileges`  FROM   mysql.user mu  Where   mu.User = 'sushanth';
DB_User_count = SELECT count(user) as user_count FROM `mysql`.user order by user;
core_schema_size = select Size_in_GB from (SELECT table_schema 'Database_name', ROUND(SUM(data_length + index_length) / 1024 / 1024 /1024, 2) 'Size_in_GB' FROM information_schema.tables where table_schema in ('datacenter','engine','lookups')  GROUP BY table_schema WITH ROLLUP) t WHERE Database_name IS NULL;
DB_version = select @@version;
non_core_schema_size = select Size_in_GB from (SELECT table_schema 'Database_name', ROUND(SUM(data_length + index_length) / 1024 / 1024 /1024, 2) 'Size_in_GB' FROM information_schema.tables where table_schema not in ('INFORMATION_SCHEMA','MYSQL','PERFORMANCE_SCHEMA','SYS','datacenter','engine','lookups')  GROUP BY table_schema WITH ROLLUP) t WHERE Database_name IS NULL;
engine_version = SELECT DISTINCT engine FROM information_schema.tables WHERE engine not in ('MEMORY','NULL','CSV','PERFORMANCE_SCHEMA');


TC_04
DB_user = SELECT user FROM `mysql`.user order by user;

TC_06
DB_check_list = [Database Checks,DB Users,OverallCount,Index Count - Core,Index Count - NonCore:]


TC_03
core_schema_index = SELECT DISTINCT(TABLE_NAME), count(COLUMN_NAME), TABLE_SCHEMA FROM INFORMATION_SCHEMA.STATISTICS WHERE TABLE_SCHEMA  IN ('engine', 'lookups', 'datacenter') GROUP BY TABLE_NAME ORDER BY TABLE_SCHEMA ASC;

 















